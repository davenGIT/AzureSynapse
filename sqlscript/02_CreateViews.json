{
	"name": "02_CreateViews",
	"properties": {
		"content": {
			"query": "----------------  vHourlyFcstDemand  ------------------------------------------------------\n\nIF EXISTS(select * FROM sys.views where name = 'vHourlyFcstDemand')\nDROP VIEW [dbo].[vHourlyFcstDemand]\nGO\n\nCREATE VIEW [dbo].[vHourlyFcstDemand]\nAS\nSELECT      DATEPART(Year, t.tpepPickupDateTime) * 1000000 + DATEPART(month, t.tpepPickupDateTime) * 10000 + \n                         DATEPART(day, t.tpepPickupDateTime) * 100 + DATEPART(hour, t.tpepPickupDateTime) as PUFcstPeriod,\n\t\t    DATEPART(Year, t.tpepDropOffDateTime) * 1000000 + DATEPART(month, t.tpepDropOffDateTime) * 10000 + \n                         DATEPART(day, t.tpepDropOffDateTime) * 100 + DATEPART(hour, t.tpepDropOffDateTime) as DOFcstPeriod,\n \t\t\tmax(CAST(t.puLocationId AS INT)) as PUFcstZone, \n\t\t\tmax(CAST(t.doLocationID as INT)) as DOFcstZone, \n\t\t\tmax(DATETIMEFROMPARTS ( \n\t\t\t\tDATEPART(Year, t.tpepPickupDateTime), \n\t\t\t\tDATEPART(month, t.tpepPickupDateTime), \n\t\t\t\tDATEPART(day, t.tpepPickupDateTime), \n\t\t\t\tDATEPART(hour, t.tpepPickupDateTime), \n\t\t\t\t0, \n\t\t\t\t0, \n\t\t\t\t0\n\t\t\t)) as PUFcstPeriodDate,\n\t\t\tmax(DATETIMEFROMPARTS ( \n\t\t\t\tDATEPART(Year, t.tpepDropOffDateTime), \n\t\t\t\tDATEPART(month, t.tpepDropOffDateTime), \n\t\t\t\tDATEPART(day, t.tpepDropOffDateTime), \n\t\t\t\tDATEPART(hour, t.tpepDropOffDateTime), \n\t\t\t\t0, \n\t\t\t\t0, \n\t\t\t\t0\n\t\t\t)) as DOFcstPeriodDate,\n\t\t\tzd.TripIndex, \n\t\t\tCount(t.tpepPickupDateTime) as demand\nFROM        dbo.RawTripData t \nINNER JOIN  dbo.ZoneDistances zd ON t.puLocationID = zd.PULocationID AND t.DOLocationID = zd.DOLocationID\nWHERE\t\tt.tpepPickupDateTime BETWEEN '1 JAN 2017' AND '30 JUN 2019'\nGROUP BY\t\n           DATEPART(Year, t.tpepPickupDateTime) * 1000000 + DATEPART(month, t.tpepPickupDateTime) * 10000 + \n                         DATEPART(day, t.tpepPickupDateTime) * 100 + DATEPART(hour, t.tpepPickupDateTime),\n\t\t   DATEPART(Year, t.tpepDropOffDateTime) * 1000000 + DATEPART(month, t.tpepDropOffDateTime) * 10000 + \n                         DATEPART(day, t.tpepDropOffDateTime) * 100 + DATEPART(hour, t.tpepDropOffDateTime),\n\t\t\tzd.TripIndex\n\nGO\n\n-----------------  vBoroughLookup  ------------------------------------------------------\n\nIF EXISTS(select * FROM sys.views where name = 'vBoroughLookup')\nDROP VIEW [dbo].[vBoroughLookup]\nGO\n\nCREATE VIEW [dbo].[vBoroughLookup]\nAS\n\tSelect\n\t\tROW_NUMBER() OVER (Order by Borough) as idx,\n\t\tBorough\n\tfrom RawZoneLookup\n\tGroup By Borough\nGO\n\n\n-----------------  vZoneLookup  ------------------------------------------------------\n\nIF EXISTS(select * FROM sys.views where name = 'vZoneLookup')\nDROP VIEW [dbo].[vZoneLookup]\nGO\n\nCREATE VIEW [dbo].[vZoneLookup]\nAS\n\tSelect\n\t\trzk.LocationID,\n\t\tbl.idx as BoroughID\n\tfrom RawZoneLookup rzk\n\tINNER JOIN vBoroughLookup bl ON bl.Borough = rzk.Borough\nGO\n\n----------------  vHourlyBoroughDemand  ------------------------------------------------------\n\nIF EXISTS(select * FROM sys.views where name = 'vHourlyBoroughDemand')\nDROP VIEW [dbo].[vHourlyBoroughDemand]\nGO\n\nCREATE VIEW [dbo].[vHourlyBoroughDemand]\nAS\nSELECT      hfd.PUFcstPeriod as FcstPeriod,\n \t\t\tzl.BoroughID as BoroughID, \n\t\t\tmax(hfd.PUFcstPeriodDate) as FcstPeriodDate,\n\t\t\tSum(hfd.demand) as Demand\nFROM        vHourlyFcstDemand hfd\nINNER JOIN\tvZoneLookup zl on hfd.DOFcstZone = zl.LocationID\nGROUP BY\thfd.PUFcstPeriod, zl.BoroughID\n\nGO\n\n----------------  vHourlyZoneDemand  ------------------------------------------------------\n\nIF EXISTS(select * FROM sys.views where name = 'vHourlyZoneDemand')\nDROP VIEW [dbo].[vHourlyZoneDemand]\nGO\n\nCREATE VIEW [dbo].[vHourlyZoneDemand]\nAS\nSELECT      hfd.PUFcstPeriod as FcstPeriod,\n \t\t\thfd.PUFcstZone as FcstZone, \n\t\t\tmax(hfd.PUFcstPeriodDate) as FcstPeriodDate,\n\t\t\tSum(hfd.demand) as Demand\nFROM        vHourlyFcstDemand hfd\nGROUP BY\thfd.PUFcstPeriod, hfd.PUFcstZone\n\nGO\n\n----------------  vHourlySupply  ------------------------------------------------------\n\nIF EXISTS(select * FROM sys.views where name = 'vHourlySupply')\nDROP VIEW [dbo].[vHourlySupply]\nGO\n\nCREATE VIEW [dbo].[vHourlySupply]\nAS\nSELECT      hfd.DOFcstPeriod as FcstPeriod,\n \t\t\thfd.DOFcstZone as FcstZone, \n\t\t\tmax(hfd.DOFcstPeriodDate) as FcstPeriodDate,\n\t\t\tSum(hfd.demand) as Supply\nFROM        vHourlyFcstDemand hfd\nGROUP BY\thfd.DOFcstPeriod, hfd.DOFcstZone\n\nGO\n\n----------------  vHourlyOverSupply  ------------------------------------------------------\n\nIF EXISTS(select * FROM sys.views where name = 'vHourlyOverSupply')\nDROP VIEW [dbo].[vHourlyOverSupply]\nGO\n\nCREATE VIEW [dbo].[vHourlyOverSupply]\nAS\n\tselect hs.FcstPeriod, hs.FcstZone, hs.Supply - hd.Demand as OverSupply\n\tfrom vHourlySupply hs\n\tLeft JOIN vHourlyZoneDemand hd ON hs.FcstPeriod = hd.FcstPeriod AND hs.FcstZone = hd.FcstZone\n\twhere hs.supply > hd.Demand\nGO\n\n---------------  vHourlyUnderSupply  ------------------------------------------------------\n\nIF EXISTS(select * FROM sys.views where name = 'vHourlyUnderSupply')\nDROP VIEW [dbo].[vHourlyUnderSupply]\nGO\n\nCREATE VIEW [dbo].[vHourlyUnderSupply]\nAS\n\tselect hs.FcstPeriod, hs.FcstZone, hd.Demand - hs.Supply as UnderSupply\n\tfrom vHourlySupply hs\n\tLeft JOIN vHourlyZoneDemand hd ON hs.FcstPeriod = hd.FcstPeriod AND hs.FcstZone = hd.FcstZone\n\twhere hs.supply < hd.Demand\nGO\n\n\n\n-----------------  vZoneDistances  ------------------------------------------------------\n\nIF EXISTS(select * FROM sys.views where name = 'vZoneDistances')\nDROP VIEW [dbo].[vZoneDistances]\nGO\n\nCREATE VIEW [dbo].[vZoneDistances]\nAS\n\tSELECT 1000000 + (t.PULocationID * 1000) + t.DOLocationID AS TripIndex, \n\t\tt.PULocationID, t.DOLocationID,  AVG(t.trip_distance) as AverageTrip\n\tFROM RawTripData t\n\tGROUP BY t.DOLocationID, t.PULocationID\nGO\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"poolName": "Built-in",
				"databaseName": "nyctaxiDB"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}