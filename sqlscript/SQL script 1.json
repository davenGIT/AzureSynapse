{
	"name": "SQL script 1",
	"properties": {
		"content": {
			"query": "\n-- Find out what the table contains\nEXEC sp_describe_first_result_set N'\nSELECT\n    TOP 1000 * \nFROM\n    OPENROWSET(\n        BULK     ''https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet'',\n        FORMAT = ''parquet''\n    ) AS [result]'\n\n-- Check your selection\nSELECT\n    TOP 1000 tpepPickupDateTime, tpepDropOffDateTime, tripDistance, puLocationId, doLocationId \nFROM\n    OPENROWSET(\n        BULK     'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet',\n        FORMAT = 'parquet'\n    ) AS [result]\nWHERE tpepPickupDateTime IS NOT NULL\n AND tpepDropOffDateTime IS NOT NULL\n AND puLocationID IS NOT NULL    \n AND doLocationID IS NOT NULL\n\n -- Create a location for your data source\nCREATE EXTERNAL DATA SOURCE taxiDataDemo WITH (\n    LOCATION = 'https://dnmay25gen2.blob.core.windows.net/dnmay25users/user'\n);\n\nUSE master;  \nGO  \nALTER DATABASE nyctaxiDB  \nCOLLATE Latin1_General_100_CI_AI_SC_UTF8 ;  \nGO  \n  \n--Verify the collation setting.  \nSELECT name, collation_name  \nFROM sys.databases  \nWHERE name = N'nyctaxiDB';  \nGO  \n\nuse nyctaxiDB\n\n--Create aparquet file format\nCREATE EXTERNAL FILE FORMAT taxiData_file_format\nWITH\n(  \n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n);\n\n-- Create the raw data external table (limit to 2018 while testing)\nCREATE EXTERNAL TABLE trips\nWITH (\n    LOCATION = 'raw_data/',\n    DATA_SOURCE = taxiDataDemo,  \n    FILE_FORMAT = taxiData_file_format\n)  \nAS\nSELECT\n    tpepPickupDateTime, tpepDropOffDateTime, tripDistance, puLocationId, doLocationId \nFROM\n    OPENROWSET(\n        BULK     'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=2018/puMonth=*/*.parquet',\n        FORMAT = 'parquet'\n    ) AS [result]\nWHERE tpepPickupDateTime IS NOT NULL\n AND tpepDropOffDateTime IS NOT NULL\n AND puLocationID IS NOT NULL    \n AND doLocationID IS NOT NULL\n\n--See what we have\nselect count(*) from trips\n\n-- Create the aggregated data external table (limit to 2018 while testing)\nCREATE EXTERNAL TABLE tripDistanceTable\nWITH (\n    LOCATION = 'agg_data/',\n    DATA_SOURCE = taxiDataDemo,  \n    FILE_FORMAT = taxiData_file_format\n)  \nAS\nSELECT\n    1000000 + (IIF(ISNUMERIC(puLocationId) = 1, CAST(puLocationId AS INT), 0) * 1000) + (IIF(ISNUMERIC(doLocationId) = 1, CAST(doLocationId AS INT), 0)) AS TripIndex, \n    puLocationId as puLocationId,\n    doLocationId as doLocationId,\n    AVG(tripDistance) as AvgTripDistance\nFROM\n    trips\nGroup By    \n    puLocationId, doLocationId\n\nSelect top 10 * from tripDistanceTable\n\n-- Create the aggregated demand external table \nCREATE EXTERNAL TABLE demandSummary\nWITH (\n    LOCATION = 'agg_demand/',\n    DATA_SOURCE = taxiDataDemo,  \n    FILE_FORMAT = taxiData_file_format\n)  \nAS\nSELECT\n    td.TripIndex as TripIndex, \n    DATEPART(year, tpepPickupDateTime) as puYear, \n    DATEPART(month, tpepPickupDateTime) as puMonth, \n    DATEPART(day, tpepPickupDateTime) as puday, \n    DATEPART(hour, tpepPickupDateTime) as puhour, \n    count(tripDistance) as trips\nFROM\n    trips t\n    INNER JOIN tripDistanceTable td ON t.puLocationId = td.puLocationId AND t.doLocationId = td.doLocationId\nwhere tripDistance > 0    \nGroup By    \n    td.TripIndex, \n    DATEPART(year, tpepPickupDateTime), \n    DATEPART(month, tpepPickupDateTime), \n    DATEPART(day, tpepPickupDateTime), \n    DATEPART(hour, tpepPickupDateTime) \n\nSELECT top 10 * from demandSummary\n\n\n-- Create the aggregated supply external table \nCREATE EXTERNAL TABLE supplySummary\nWITH (\n    LOCATION = 'agg_supply/',\n    DATA_SOURCE = taxiDataDemo,  \n    FILE_FORMAT = taxiData_file_format\n)  \nAS\nSELECT\n    t.doLocationId as TripIndex, \n    DATEPART(year, tpepDropOffDateTime) as puYear, \n    DATEPART(month, tpepDropOffDateTime) as puMonth, \n    DATEPART(day, tpepDropOffDateTime) as puday, \n    DATEPART(hour, tpepDropOffDateTime) as puhour, \n    count(tripDistance) as trips\nFROM\n    trips t\nwhere tripDistance > 0    \nGroup By    \n    t.doLocationId, \n    DATEPART(year, tpepDropOffDateTime), \n    DATEPART(month, tpepDropOffDateTime), \n    DATEPART(day, tpepDropOffDateTime), \n    DATEPART(hour, tpepDropOffDateTime) \n\n\nSELECT top 10 * from supplySummary\n ",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"poolName": "Built-in",
				"databaseName": "nyctaxiDB"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}